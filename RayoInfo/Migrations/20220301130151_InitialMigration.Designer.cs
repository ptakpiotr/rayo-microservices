// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using RayoInfo.Data;

#nullable disable

namespace RayoInfo.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20220301130151_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("RayoInfo.Models.CommentModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Author")
                        .HasColumnType("text");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)");

                    b.Property<int>("Dislikes")
                        .HasColumnType("integer");

                    b.Property<int>("Likes")
                        .HasColumnType("integer");

                    b.Property<int>("NewsId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("NewsId");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("RayoInfo.Models.Competition", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Plan")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Competition");
                });

            modelBuilder.Entity("RayoInfo.Models.NewsModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Author")
                        .HasColumnType("text");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("DateOfCreation")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("PhotoUrl")
                        .HasColumnType("text");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("News");
                });

            modelBuilder.Entity("RayoInfo.Models.Standing", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Stage")
                        .HasColumnType("text");

                    b.Property<int?>("StandingsModelId")
                        .HasColumnType("integer");

                    b.Property<string>("Type")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("StandingsModelId");

                    b.ToTable("Standing");
                });

            modelBuilder.Entity("RayoInfo.Models.StandingsModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<long?>("CompetitionId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("CompetitionId");

                    b.ToTable("Standings");
                });

            modelBuilder.Entity("RayoInfo.Models.Table", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<long>("Draw")
                        .HasColumnType("bigint");

                    b.Property<long>("Lost")
                        .HasColumnType("bigint");

                    b.Property<long>("PlayedGames")
                        .HasColumnType("bigint");

                    b.Property<long>("Points")
                        .HasColumnType("bigint");

                    b.Property<long>("Position")
                        .HasColumnType("bigint");

                    b.Property<int?>("StandingId")
                        .HasColumnType("integer");

                    b.Property<long?>("TeamId")
                        .HasColumnType("bigint");

                    b.Property<long>("Won")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("StandingId");

                    b.HasIndex("TeamId");

                    b.ToTable("Table");
                });

            modelBuilder.Entity("RayoInfo.Models.Team", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("CrestUrl")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Team");
                });

            modelBuilder.Entity("RayoInfo.Models.CommentModel", b =>
                {
                    b.HasOne("RayoInfo.Models.NewsModel", "News")
                        .WithMany("Comments")
                        .HasForeignKey("NewsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("News");
                });

            modelBuilder.Entity("RayoInfo.Models.Standing", b =>
                {
                    b.HasOne("RayoInfo.Models.StandingsModel", null)
                        .WithMany("Standings")
                        .HasForeignKey("StandingsModelId");
                });

            modelBuilder.Entity("RayoInfo.Models.StandingsModel", b =>
                {
                    b.HasOne("RayoInfo.Models.Competition", "Competition")
                        .WithMany()
                        .HasForeignKey("CompetitionId");

                    b.Navigation("Competition");
                });

            modelBuilder.Entity("RayoInfo.Models.Table", b =>
                {
                    b.HasOne("RayoInfo.Models.Standing", null)
                        .WithMany("Table")
                        .HasForeignKey("StandingId");

                    b.HasOne("RayoInfo.Models.Team", "Team")
                        .WithMany()
                        .HasForeignKey("TeamId");

                    b.Navigation("Team");
                });

            modelBuilder.Entity("RayoInfo.Models.NewsModel", b =>
                {
                    b.Navigation("Comments");
                });

            modelBuilder.Entity("RayoInfo.Models.Standing", b =>
                {
                    b.Navigation("Table");
                });

            modelBuilder.Entity("RayoInfo.Models.StandingsModel", b =>
                {
                    b.Navigation("Standings");
                });
#pragma warning restore 612, 618
        }
    }
}
